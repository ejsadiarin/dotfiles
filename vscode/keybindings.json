// Place your key bindings in this file to override the defaults
[
  {
    "key": "ctrl+shift+z",
    "command": "extension.multiCommand.execute",
    "args": {
      "sequence": [
        "workbench.action.toggleActivityBarVisibility",
        "workbench.action.toggleStatusbarVisibility"
      ]
    }
  },
  {
    "key": "ctrl+shift+alt+z",
    "command": "settings.cycle.zenPerfection"
  },
  {
    "key": "alt+m",
    "command": "breadcrumbs.toggle"
  },
  {
    "key": "alt+n",
    "command": "workbench.action.toggleStatusbarVisibility"
  },
  {
    "key": "alt+b",
    "command": "workbench.action.toggleActivityBarVisibility"
  },
  {
    "key": "ctrl+h",
    "command": "workbench.action.focusLeftGroup",
    "when": "editorTextFocus && vim.active && vim.mode != 'Insert'"
  },
  {
    "key": "ctrl+l",
    "command": "workbench.action.focusRightGroup",
    "when": "editorTextFocus && vim.active && vim.mode != 'Insert'"
  },
  {
    "key": "ctrl+k",
    "command": "workbench.action.focusAboveGroup",
    "when": "editorTextFocus && vim.active && vim.mode != 'Insert'"
  },
  {
    "key": "ctrl+j",
    "command": "workbench.action.focusBelowGroup",
    "when": "editorTextFocus && vim.active && vim.mode != 'Insert'"
  },
  {
    "key": "h",
    "command": "list.collapse",
    "when": "listFocus && !inputFocus"
  },
  {
    "key": "l",
    "command": "list.expand",
    "when": "listFocus && !inputFocus"
  },
  {
    "key": "k",
    "command": "list.focusUp",
    "when": "listFocus && !inputFocus"
  },
  {
    "key": "j",
    "command": "list.focusDown",
    "when": "listFocus && !inputFocus"
  },
  {
    "key": "r",
    "command": "renameFile",
    "when": "explorerViewletVisible && filesExplorerFocus && !explorerResourceIsRoot && !inputFocus"
  },
  {
    "key": "a",
    "command": "explorer.newFile",
    "when": "explorerViewletVisible && filesExplorerFocus && !explorerResourceIsRoot && !inputFocus"
  },
  {
    "key": "d",
    "command": "deleteFile",
    "when": "explorerViewletVisible && filesExplorerFocus && !explorerResourceIsRoot && !inputFocus"
  },
  {
    "key": "capslock",
    "command": "extension.vim_escape",
    "when": "editorTextFocus && vim.active && !inDebugRepl"
  },
  {
    // Allow normal tab behavior in insert mode and other contexts where navigation shouldn't apply
    "key": "tab",
    "when": "editorTextFocus && vim.active && vim.mode == 'Insert'",
    "command": "tab"
  },
  {
    // From editor: go to left sidebar if visible, otherwise right sidebar if visible, otherwise stay in editor
    "key": "tab",
    "when": "!sideBarFocus && !auxiliaryBarFocus && vim.active && vim.mode != 'Insert' && sideBarVisible",
    "command": "workbench.action.focusSideBar"
  },
  {
    // From editor: go to right sidebar if left sidebar is not visible but right sidebar is
    "key": "tab",
    "when": "!sideBarFocus && !auxiliaryBarFocus && vim.active && vim.mode != 'Insert' && !sideBarVisible && auxiliaryBarVisible",
    "command": "workbench.action.focusAuxiliaryBar"
  },
  {
    // From left sidebar: go to right sidebar if visible, otherwise back to editor
    "key": "tab",
    "when": "sideBarFocus && vim.active && vim.mode != 'Insert' && auxiliaryBarVisible",
    "command": "workbench.action.focusAuxiliaryBar"
  },
  {
    // From left sidebar: go to editor if right sidebar is not visible
    "key": "tab",
    "when": "sideBarFocus && vim.active && vim.mode != 'Insert' && !auxiliaryBarVisible",
    "command": "workbench.action.focusActiveEditorGroup"
  },
  {
    // From right sidebar: always go back to editor
    "key": "tab",
    "when": "auxiliaryBarFocus && vim.active && vim.mode != 'Insert'",
    "command": "workbench.action.focusActiveEditorGroup"
  },
  {
    "key": "ctrl+p",
    "command": "workbench.action.quickOpenSelectPrevious",
    "when": "inQuickOpen"
  },
  {
    "key": "ctrl+n",
    "command": "workbench.action.quickOpenSelectNext",
    "when": "inQuickOpen"
  }
]
